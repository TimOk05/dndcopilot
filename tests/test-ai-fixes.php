<?php
/**
 * –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π AI –∏ D&D API
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞ –ò–ò, –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–º–µ–Ω –∏–∑ D&D API –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å –ò–ò
 */

require_once 'config.php';
require_once 'auth.php';

// –í—Ä–µ–º–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è isAdmin –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function isAdmin() {
    if (!isset($_SESSION['username'])) {
        return false;
    }
    $adminUsers = ['admin', 'administrator', 'root', 'master'];
    return in_array(strtolower($_SESSION['username']), $adminUsers);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
if (!isLoggedIn()) {
    header('Location: login.php');
    exit;
}

$currentUser = $_SESSION['username'] ?? '–ì–æ—Å—Ç—å';
$isAdmin = isAdmin();

?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π AI –∏ D&D API - DnD Copilot</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background: #f5f5f5;
        }
        .test-container {
            max-width: 900px;
            margin: 0 auto;
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .test-section {
            margin: 20px 0;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        .test-title {
            font-weight: bold;
            color: #333;
            margin-bottom: 10px;
            font-size: 1.1em;
        }
        .test-result {
            padding: 10px;
            border-radius: 4px;
            margin: 5px 0;
        }
        .success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        .error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        .info {
            background: #d1ecf1;
            color: #0c5460;
            border: 1px solid #bee5eb;
        }
        .warning {
            background: #fff3cd;
            color: #856404;
            border: 1px solid #ffeaa7;
        }
        .test-buttons {
            margin: 20px 0;
            text-align: center;
        }
        .test-btn {
            background: #007bff;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            margin: 5px;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
        }
        .test-btn:hover {
            background: #0056b3;
        }
        .test-btn.success {
            background: #28a745;
        }
        .test-btn.success:hover {
            background: #1e7e34;
        }
        .test-btn.warning {
            background: #ffc107;
            color: #212529;
        }
        .test-btn.warning:hover {
            background: #e0a800;
        }
        .code-block {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 4px;
            padding: 10px;
            font-family: monospace;
            font-size: 0.9em;
            margin: 10px 0;
            overflow-x: auto;
        }
        .api-test {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 4px;
            padding: 15px;
            margin: 10px 0;
        }
        .api-test button {
            background: #007bff;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            margin: 5px;
        }
        .api-test button:hover {
            background: #0056b3;
        }
        .api-result {
            margin-top: 10px;
            padding: 10px;
            border-radius: 4px;
            font-family: monospace;
            font-size: 0.9em;
            max-height: 300px;
            overflow-y: auto;
        }
        .character-card {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 4px;
            padding: 15px;
            margin: 10px 0;
        }
        .character-name {
            font-weight: bold;
            font-size: 1.1em;
            color: #333;
        }
        .character-details {
            margin-top: 5px;
            color: #666;
        }
    </style>
</head>
<body>
    <div class="test-container">
        <h1>üß™ –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π AI –∏ D&D API</h1>
        
        <div class="test-section">
            <div class="test-title">1. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞ –ò–ò</div>
            <div class="test-result success">
                ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—à–∏–±–∫–∞ —Å `users.php` ‚Üí –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ `auth.php`
            </div>
            <div class="test-result success">
                ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—à–∏–±–∫–∞ —Å `MAX_FILE_SIZE` ‚Üí –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
            </div>
            <div class="test-result info">
                ‚ÑπÔ∏è –¢–µ–ø–µ—Ä—å —á–∞—Ç –ò–ò –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –æ—à–∏–±–æ–∫
            </div>
        </div>
        
        <div class="test-section">
            <div class="test-title">2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–º–µ–Ω –∏–∑ D&D API</div>
            <div class="test-result success">
                ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è `getNamesFromDndApi()` –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω –∏–∑ D&D 5e API
            </div>
            <div class="test-result success">
                ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω fallback –Ω–∞ JSON —Ñ–∞–π–ª –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
            </div>
            <div class="test-result success">
                ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –º–∞–ø–ø–∏–Ω–≥ —Ä–∞—Å –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ API
            </div>
            <div class="test-result info">
                ‚ÑπÔ∏è –¢–µ–ø–µ—Ä—å –∏–º–µ–Ω–∞ –±–µ—Ä—É—Ç—Å—è –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ D&D
            </div>
        </div>
        
        <div class="test-section">
            <div class="test-title">3. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å –ò–ò</div>
            <div class="test-result success">
                ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Ç–µ–ø–µ—Ä—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ò–ò
            </div>
            <div class="test-result success">
                ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Ç–µ–ø–µ—Ä—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ò–ò
            </div>
            <div class="test-result warning">
                ‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ API –∫–ª—é—á–µ–π –≤ `config.php`
            </div>
        </div>
        
        <div class="test-section">
            <div class="test-title">4. –¢–µ—Å—Ç —á–∞—Ç–∞ –ò–ò</div>
            <div class="api-test">
                <p>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∞—Ç–∞ –ò–ò:</p>
                <button onclick="testAIChat()">–¢–µ—Å—Ç —á–∞—Ç–∞ –ò–ò</button>
                <div id="ai-chat-result" class="api-result" style="display: none;"></div>
            </div>
        </div>
        
        <div class="test-section">
            <div class="test-title">5. –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –ò–ò</div>
            <div class="api-test">
                <p>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –ò–ò:</p>
                <button onclick="testCharacterWithAI()">–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å –ò–ò</button>
                <div id="character-ai-result" class="api-result" style="display: none;"></div>
            </div>
        </div>
        
        <div class="test-section">
            <div class="test-title">6. –ö–æ–¥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π</div>
            <div class="code-block">
// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞ –ò–ò
require_once __DIR__ . '/../auth.php';  // –±—ã–ª–æ users.php
$max_size = 10 * 1024 * 1024;  // –±—ã–ª–æ MAX_FILE_SIZE

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–º–µ–Ω –∏–∑ D&D API
private function getNamesFromDndApi($race, $gender) {
    $names = $this->callDndApi("races/{$apiRace}");
    // Fallback –Ω–∞ JSON –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
    return $this->getNamesFromJson($race, $gender);
}

// –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å –ò–ò
private function generateDescription($character) {
    if (!$this->deepseek_api_key) {
        return "–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ AI API.";
    }
    // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ò–ò
}

private function generateBackground($character) {
    if (!$this->deepseek_api_key) {
        return "–ü—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ AI API.";
    }
    // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ò–ò
}
            </div>
        </div>
        
        <div class="test-buttons">
            <a href="index.php" class="test-btn success">‚úÖ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É</a>
            <a href="test-names-fix.php" class="test-btn">üß™ –¢–µ—Å—Ç –∏–º–µ–Ω</a>
        </div>
        
        <div class="test-section">
            <div class="test-title">7. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é</div>
            <div class="test-result info">
                1. –ù–∞–∂–º–∏—Ç–µ "–¢–µ—Å—Ç —á–∞—Ç–∞ –ò–ò" –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏
            </div>
            <div class="test-result info">
                2. –ù–∞–∂–º–∏—Ç–µ "–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å –ò–ò" –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            </div>
            <div class="test-result info">
                3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á–∞—Ç –ò–ò
            </div>
            <div class="test-result info">
                4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–¥–æ–ª–∂–Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ò–ò)
            </div>
        </div>
        
        <div class="test-section">
            <div class="test-title">8. –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</div>
            <div class="test-result success">
                ‚úÖ –ß–∞—Ç –ò–ò —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –æ—à–∏–±–æ–∫ PHP
            </div>
                <div class="test-result success">
                ‚úÖ –ò–º–µ–Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –±–µ—Ä—É—Ç—Å—è –∏–∑ D&D API
            </div>
            <div class="test-result success">
                ‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ –∏ –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—è –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –ò–ò
            </div>
            <div class="test-result warning">
                ‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ API –∫–ª—é—á–µ–π –¥–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
            </div>
        </div>
    </div>

    <script>
        function testAIChat() {
            const resultDiv = document.getElementById('ai-chat-result');
            resultDiv.style.display = 'block';
            resultDiv.innerHTML = '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∞—Ç–∞ –ò–ò...';
            
            const formData = new FormData();
            formData.append('message', '–ü—Ä–∏–≤–µ—Ç! –†–∞—Å—Å–∫–∞–∂–∏ –æ –ø—Ä–∞–≤–∏–ª–∞—Ö D&D 5e');
            
            fetch('api/ai-chat.php', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                console.log('AI Chat Response:', data);
                
                if (data.success) {
                    resultDiv.innerHTML = `
                        <div style="color: green; font-weight: bold;">‚úÖ –ß–∞—Ç –ò–ò —Ä–∞–±–æ—Ç–∞–µ—Ç!</div>
                        <div style="margin-top: 10px;">
                            <strong>–û—Ç–≤–µ—Ç –ò–ò:</strong><br>
                            <div style="background: #f8f9fa; padding: 10px; border-radius: 4px; margin-top: 5px;">
                                ${data.response}
                            </div>
                        </div>
                    `;
                } else {
                    resultDiv.innerHTML = `
                        <div style="color: orange; font-weight: bold;">‚ö†Ô∏è –ß–∞—Ç –ò–ò –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É</div>
                        <div>${data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}</div>
                        <pre>${JSON.stringify(data, null, 2)}</pre>
                    `;
                }
            })
            .catch(error => {
                resultDiv.innerHTML = `
                    <div style="color: red; font-weight: bold;">‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏</div>
                    <div>${error.message}</div>
                `;
            });
        }
        
        function testCharacterWithAI() {
            const resultDiv = document.getElementById('character-ai-result');
            resultDiv.style.display = 'block';
            resultDiv.innerHTML = '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –ò–ò...';
            
            const formData = new FormData();
            formData.append('race', 'human');
            formData.append('class', 'fighter');
            formData.append('level', '1');
            formData.append('alignment', 'neutral');
            formData.append('gender', 'male');
            formData.append('use_ai', 'on');
            
            fetch('api/generate-characters.php', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                console.log('Character Generation Response:', data);
                
                if (data.success) {
                    const character = data.character || data.npc;
                    if (character && character.name) {
                        resultDiv.innerHTML = `
                            <div style="color: green; font-weight: bold;">‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å –ò–ò —É—Å–ø–µ—à–Ω–∞!</div>
                            <div class="character-card">
                                <div class="character-name">${character.name}</div>
                                <div class="character-details">
                                    <strong>–†–∞—Å–∞:</strong> ${character.race}<br>
                                    <strong>–ö–ª–∞—Å—Å:</strong> ${character.class}<br>
                                    <strong>–£—Ä–æ–≤–µ–Ω—å:</strong> ${character.level}<br>
                                    <strong>–ü–æ–ª:</strong> ${character.gender}
                                </div>
                            </div>
                            <div style="margin-top: 10px;">
                                <strong>–û–ø–∏—Å–∞–Ω–∏–µ (–ò–ò):</strong><br>
                                <div style="background: #f8f9fa; padding: 10px; border-radius: 4px; margin-top: 5px;">
                                    ${character.description || '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ'}
                                </div>
                            </div>
                            <div style="margin-top: 10px;">
                                <strong>–ü—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—è (–ò–ò):</strong><br>
                                <div style="background: #f8f9fa; padding: 10px; border-radius: 4px; margin-top: 5px;">
                                    ${character.background || '–ü—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞'}
                                </div>
                            </div>
                        `;
                    } else {
                        resultDiv.innerHTML = `
                            <div style="color: orange; font-weight: bold;">‚ö†Ô∏è API –≤–µ—Ä–Ω—É–ª —É—Å–ø–µ—Ö, –Ω–æ –¥–∞–Ω–Ω—ã–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã</div>
                            <pre>${JSON.stringify(data, null, 2)}</pre>
                        `;
                    }
                } else {
                    resultDiv.innerHTML = `
                        <div style="color: red; font-weight: bold;">‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏</div>
                        <div>${data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}</div>
                        <pre>${JSON.stringify(data, null, 2)}</pre>
                    `;
                }
            })
            .catch(error => {
                resultDiv.innerHTML = `
                    <div style="color: red; font-weight: bold;">‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏</div>
                    <div>${error.message}</div>
                `;
            });
        }
    </script>
</body>
</html>
