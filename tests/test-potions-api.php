<?php
/**
 * –¢–µ—Å—Ç API –∑–µ–ª–∏–π D&D
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å D&D 5e API –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∑–µ–ª–∏–π
 */

require_once 'config.php';

echo "<h1>üß™ –¢–µ—Å—Ç API –∑–µ–ª–∏–π D&D</h1>";
echo "<p><strong>–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–∞:</strong> " . date('Y-m-d H:i:s') . "</p>";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
echo "<h2>üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π</h2>";

$curl_available = function_exists('curl_init');
$openssl_available = function_exists('openssl_encrypt');
$json_available = function_exists('json_encode');

echo "<p><strong>cURL:</strong> " . ($curl_available ? "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω" : "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω") . "</p>";
echo "<p><strong>OpenSSL:</strong> " . ($openssl_available ? "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω" : "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω") . "</p>";
echo "<p><strong>JSON:</strong> " . ($openssl_available ? "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω" : "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω") . "</p>";

if (!$curl_available) {
    echo "<p style='color: red;'>‚ùå cURL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–µ–ª–∏–π –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.</p>";
    exit;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ D&D API
echo "<h2>üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ D&D API</h2>";

$dnd_api_url = 'https://www.dnd5eapi.co/api';
$test_url = $dnd_api_url . '/magic-items';

echo "<p><strong>–¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π URL:</strong> <a href='$test_url' target='_blank'>$test_url</a></p>";

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
$ch = curl_init($test_url);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_TIMEOUT, 30);
curl_setopt($ch, CURLOPT_USERAGENT, 'DnD-Copilot/1.0');
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);

$response = curl_exec($ch);
$http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
$error = curl_error($ch);
$curl_info = curl_getinfo($ch);
curl_close($ch);

echo "<p><strong>HTTP –∫–æ–¥:</strong> $http_code</p>";
echo "<p><strong>–û—à–∏–±–∫–∞ cURL:</strong> " . ($error ?: "–ù–µ—Ç") . "</p>";
echo "<p><strong>–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞:</strong> " . round($curl_info['total_time'], 3) . " —Å–µ–∫</p>";

if ($error) {
    echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ cURL: $error</p>";
} elseif ($http_code !== 200) {
    echo "<p style='color: red;'>‚ùå HTTP –æ—à–∏–±–∫–∞: $http_code</p>";
                } else {
    echo "<p style='color: green;'>‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ D&D API —É—Å–ø–µ—à–Ω–æ</p>";
}

// –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
if ($response) {
    $data = json_decode($response, true);
    if (json_last_error() === JSON_ERROR_NONE) {
        echo "<p style='color: green;'>‚úÖ JSON –æ—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω</p>";
        
        if (isset($data['count'])) {
            echo "<p><strong>–í—Å–µ–≥–æ –º–∞–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤:</strong> " . $data['count'] . "</p>";
        }
        
        if (isset($data['results']) && is_array($data['results'])) {
            echo "<p><strong>–ü–æ–ª—É—á–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:</strong> " . count($data['results']) . "</p>";
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
            echo "<h3>üìã –ü–µ—Ä–≤—ã–µ –º–∞–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã:</h3>";
            echo "<ul>";
            for ($i = 0; $i < min(5, count($data['results'])); $i++) {
                $item = $data['results'][$i];
                echo "<li><strong>" . htmlspecialchars($item['name']) . "</strong> - <a href='{$item['url']}' target='_blank'>API —Å—Å—ã–ª–∫–∞</a></li>";
            }
            echo "</ul>";
            
            // –ò—â–µ–º –∑–µ–ª—å—è
            echo "<h3>üß™ –ü–æ–∏—Å–∫ –∑–µ–ª–∏–π:</h3>";
            $potions = [];
            foreach ($data['results'] as $item) {
                $name = strtolower($item['name']);
                $potion_keywords = ['potion', 'elixir', 'philter', 'oil', 'tincture', 'essence', 'brew', 'concoction', 'draught', 'tonic', 'extract'];
                
                foreach ($potion_keywords as $keyword) {
                    if (strpos($name, $keyword) !== false) {
                        $potions[] = $item;
                        break;
                    }
                }
            }
            
            echo "<p><strong>–ù–∞–π–¥–µ–Ω–æ –∑–µ–ª–∏–π:</strong> " . count($potions) . "</p>";
            
            if (!empty($potions)) {
                echo "<ul>";
                foreach (array_slice($potions, 0, 5) as $potion) {
                    echo "<li><strong>" . htmlspecialchars($potion['name']) . "</strong> - <a href='{$potion['url']}' target='_blank'>API —Å—Å—ã–ª–∫–∞</a></li>";
                }
                echo "</ul>";
            }
        }
    } else {
        echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON: " . json_last_error_msg() . "</p>";
        echo "<p><strong>–°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç:</strong></p>";
        echo "<pre>" . htmlspecialchars(substr($response, 0, 500)) . "...</pre>";
    }
} else {
    echo "<p style='color: red;'>‚ùå –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç API</p>";
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–µ–ª–∏–π
echo "<h2>üß™ –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –∑–µ–ª–∏–π</h2>";

try {
    require_once 'api/generate-potions.php';
    $generator = new PotionGenerator();
    
    echo "<p style='color: green;'>‚úÖ –ö–ª–∞—Å—Å PotionGenerator –∑–∞–≥—Ä—É–∂–µ–Ω</p>";
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
    $params = ['count' => 1];
    $result = $generator->generatePotions($params);
    
    if ($result['success']) {
        echo "<p style='color: green;'>‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–µ–ª–∏–π —É—Å–ø–µ—à–Ω–∞</p>";
        echo "<p><strong>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∑–µ–ª–∏–π:</strong> " . $result['count'] . "</p>";
        
        if (isset($result['data'][0])) {
            $potion = $result['data'][0];
            echo "<h3>üéØ –ü—Ä–∏–º–µ—Ä –∑–µ–ª—å—è:</h3>";
            echo "<ul>";
            echo "<li><strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> " . htmlspecialchars($potion['name']) . "</li>";
            echo "<li><strong>–†–µ–¥–∫–æ—Å—Ç—å:</strong> " . htmlspecialchars($potion['rarity']) . "</li>";
            echo "<li><strong>–¢–∏–ø:</strong> " . htmlspecialchars($potion['type']) . "</li>";
            echo "<li><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> " . htmlspecialchars($potion['description']) . "</li>";
            echo "</ul>";
        }
                } else {
        echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–µ–ª–∏–π: " . htmlspecialchars($result['error']) . "</p>";
    }
    
} catch (Exception $e) {
    echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –∑–µ–ª–∏–π: " . htmlspecialchars($e->getMessage()) . "</p>";
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–µ—à
echo "<h2>üíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–µ—à–∞</h2>";

$cache_file = 'logs/cache/potions_cache.json';
if (file_exists($cache_file)) {
    $cache_size = filesize($cache_file);
    $cache_time = filemtime($cache_file);
    echo "<p><strong>–§–∞–π–ª –∫–µ—à–∞:</strong> –°—É—â–µ—Å—Ç–≤—É–µ—Ç</p>";
    echo "<p><strong>–†–∞–∑–º–µ—Ä:</strong> " . round($cache_size / 1024, 2) . " KB</p>";
    echo "<p><strong>–í—Ä–µ–º—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:</strong> " . date('Y-m-d H:i:s', $cache_time) . "</p>";
    
    $cache_data = json_decode(file_get_contents($cache_file), true);
    if (json_last_error() === JSON_ERROR_NONE) {
        echo "<p style='color: green;'>‚úÖ –ö–µ—à –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –¥–µ–∫–æ–¥–∏—Ä—É–µ—Ç—Å—è</p>";
        if (isset($cache_data['potions'])) {
            echo "<p><strong>–ó–µ–ª–∏–π –≤ –∫–µ—à–µ:</strong> " . count($cache_data['potions']) . "</p>";
        }
    } else {
        echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –∫–µ—à–∞</p>";
    }
} else {
    echo "<p style='color: orange;'>‚ö†Ô∏è –§–∞–π–ª –∫–µ—à–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω</p>";
}

echo "<h2>üìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h2>";

if (!$curl_available) {
    echo "<p style='color: red;'>‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ cURL —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è PHP</p>";
} elseif ($http_code !== 200) {
    echo "<p style='color: orange;'>‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ D&D API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.</p>";
} elseif (empty($potions)) {
    echo "<p style='color: orange;'>‚ö†Ô∏è –ó–µ–ª—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ API. –í–æ–∑–º–æ–∂–Ω–æ, –∏–∑–º–µ–Ω–∏–ª–∞—Å—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö.</p>";
} else {
    echo "<p style='color: green;'>‚úÖ API –∑–µ–ª–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ</p>";
}

echo "<p><strong>–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω:</strong> " . date('Y-m-d H:i:s') . "</p>";
?>
