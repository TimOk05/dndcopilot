<?php
/**
 * –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è API –∏ UI –ø—Ä–æ–±–ª–µ–º
 */

require_once 'config.php';
require_once 'auth.php';

// –í—Ä–µ–º–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è isAdmin –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function isAdmin() {
    if (!isset($_SESSION['username'])) {
        return false;
    }
    $adminUsers = ['admin', 'administrator', 'root', 'master'];
    return in_array(strtolower($_SESSION['username']), $adminUsers);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
if (!isLoggedIn()) {
    header('Location: login.php');
    exit;
}

$currentUser = $_SESSION['username'] ?? '–ì–æ—Å—Ç—å';
$isAdmin = isAdmin();

?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ - DnD Copilot</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background: #f5f5f5;
        }
        .test-container {
            max-width: 900px;
            margin: 0 auto;
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .test-section {
            margin: 20px 0;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        .test-title {
            font-weight: bold;
            color: #333;
            margin-bottom: 10px;
            font-size: 1.1em;
        }
        .test-result {
            padding: 10px;
            border-radius: 4px;
            margin: 5px 0;
        }
        .success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        .error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        .info {
            background: #d1ecf1;
            color: #0c5460;
            border: 1px solid #bee5eb;
        }
        .warning {
            background: #fff3cd;
            color: #856404;
            border: 1px solid #ffeaa7;
        }
        .test-buttons {
            margin: 20px 0;
            text-align: center;
        }
        .test-btn {
            background: #007bff;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            margin: 5px;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
        }
        .test-btn:hover {
            background: #0056b3;
        }
        .test-btn.success {
            background: #28a745;
        }
        .test-btn.success:hover {
            background: #1e7e34;
        }
        .test-btn.warning {
            background: #ffc107;
            color: #212529;
        }
        .test-btn.warning:hover {
            background: #e0a800;
        }
        .code-block {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 4px;
            padding: 10px;
            font-family: monospace;
            font-size: 0.9em;
            margin: 10px 0;
            overflow-x: auto;
        }
        .api-test {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 4px;
            padding: 15px;
            margin: 10px 0;
        }
        .api-test button {
            background: #007bff;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            margin: 5px;
        }
        .api-test button:hover {
            background: #0056b3;
        }
        .api-result {
            margin-top: 10px;
            padding: 10px;
            border-radius: 4px;
            font-family: monospace;
            font-size: 0.9em;
            max-height: 300px;
            overflow-y: auto;
        }
    </style>
</head>
<body>
    <div class="test-container">
        <h1>üß™ –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏</h1>
        
        <div class="test-section">
            <div class="test-title">1. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è API –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π</div>
            <div class="test-result success">
                ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ API: `npc` ‚Üí `character`
            </div>
            <div class="test-result success">
                ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –∏ –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –≤ JavaScript
            </div>
            <div class="test-result info">
                ‚ÑπÔ∏è –¢–µ–ø–µ—Ä—å API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
            </div>
        </div>
        
        <div class="test-section">
            <div class="test-title">2. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è UI</div>
            <div class="test-result success">
                ‚úÖ –£–±—Ä–∞–Ω–∞ –∏–∫–æ–Ω–∫–∞ Google –∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            </div>
            <div class="test-result success">
                ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å tooltip (–æ–±—Ä–µ–∑–∞–Ω–∏–µ, –≤—ã—Ö–æ–¥ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã)
            </div>
            <div class="test-result success">
                ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ tooltip
            </div>
            <div class="test-result info">
                ‚ÑπÔ∏è Tooltip —Ç–µ–ø–µ—Ä—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
            </div>
        </div>
        
        <div class="test-section">
            <div class="test-title">3. –¢–µ—Å—Ç API –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π</div>
            <div class="api-test">
                <p>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π:</p>
                <button onclick="testCharacterAPI()">–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</button>
                <div id="api-result" class="api-result" style="display: none;"></div>
            </div>
        </div>
        
        <div class="test-section">
            <div class="test-title">4. –ö–æ–¥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π</div>
            <div class="code-block">
// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ API - –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ –æ—Ç–≤–µ—Ç–∞
return [
    'success' => true,
    'character' => $character  // –±—ã–ª–æ 'npc'
];

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ JavaScript - –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–±–æ–∏—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
const character = data.character || data.npc;

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ UI - —É–±—Ä–∞–Ω–∞ –∏–∫–æ–Ω–∫–∞ Google
// –£–¥–∞–ª–µ–Ω –±–ª–æ–∫ —Å google-badge

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ tooltip - –¥–æ–±–∞–≤–ª–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —à–∏—Ä–∏–Ω—ã
max-width: min(200px, calc(100vw - 40px));
word-wrap: break-word;
white-space: normal;
            </div>
        </div>
        
        <div class="test-buttons">
            <a href="index.php" class="test-btn success">‚úÖ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É</a>
            <a href="test-final-fixes.php" class="test-btn">üéØ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç</a>
        </div>
        
        <div class="test-section">
            <div class="test-title">5. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é</div>
            <div class="test-result info">
                1. –ù–∞–∂–º–∏—Ç–µ "–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞" –≤—ã—à–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API
            </div>
            <div class="test-result info">
                2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é (F2)
            </div>
            <div class="test-result info">
                3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –∞–¥–º–∏–Ω–∞ tooltip –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
            </div>
            <div class="test-result info">
                4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–∫–æ–Ω–∫–∞ Google –±–æ–ª—å—à–µ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
            </div>
        </div>
        
        <div class="test-section">
            <div class="test-title">6. –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</div>
            <div class="test-result success">
                ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –æ—à–∏–±–∫–∏ "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"
            </div>
            <div class="test-result success">
                ‚úÖ Tooltip –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã
            </div>
            <div class="test-result success">
                ‚úÖ –ò–∫–æ–Ω–∫–∞ Google —É–±—Ä–∞–Ω–∞ –∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            </div>
            <div class="test-result success">
                ‚úÖ –ù–µ—Ç –ª–∏—à–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –≤–∏–¥–µ –∫–≤–∞–¥—Ä–∞—Ç–∏–∫–æ–≤
            </div>
        </div>
    </div>

    <script>
        function testCharacterAPI() {
            const resultDiv = document.getElementById('api-result');
            resultDiv.style.display = 'block';
            resultDiv.innerHTML = '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API...';
            
            const formData = new FormData();
            formData.append('race', 'human');
            formData.append('class', 'fighter');
            formData.append('level', '1');
            formData.append('alignment', 'neutral');
            formData.append('gender', 'random');
            formData.append('use_ai', 'on');
            
            fetch('api/generate-characters.php', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                console.log('API Response:', data);
                
                if (data.success) {
                    const character = data.character || data.npc;
                    if (character && character.name) {
                        resultDiv.innerHTML = `
                            <div style="color: green; font-weight: bold;">‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!</div>
                            <div><strong>–ü–µ—Ä—Å–æ–Ω–∞–∂:</strong> ${character.name}</div>
                            <div><strong>–†–∞—Å–∞:</strong> ${character.race}</div>
                            <div><strong>–ö–ª–∞—Å—Å:</strong> ${character.class}</div>
                            <div><strong>–£—Ä–æ–≤–µ–Ω—å:</strong> ${character.level}</div>
                            <div><strong>–§–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö:</strong> ${data.character ? 'character' : 'npc'}</div>
                        `;
                    } else {
                        resultDiv.innerHTML = `
                            <div style="color: orange; font-weight: bold;">‚ö†Ô∏è API –≤–µ—Ä–Ω—É–ª —É—Å–ø–µ—Ö, –Ω–æ –¥–∞–Ω–Ω—ã–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã</div>
                            <pre>${JSON.stringify(data, null, 2)}</pre>
                        `;
                    }
                } else {
                    resultDiv.innerHTML = `
                        <div style="color: red; font-weight: bold;">‚ùå –û—à–∏–±–∫–∞ API</div>
                        <div>${data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}</div>
                        <pre>${JSON.stringify(data, null, 2)}</pre>
                    `;
                }
            })
            .catch(error => {
                resultDiv.innerHTML = `
                    <div style="color: red; font-weight: bold;">‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏</div>
                    <div>${error.message}</div>
                `;
            });
        }
    </script>
</body>
</html>
