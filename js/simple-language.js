/**
 * –ü—Ä–æ—Å—Ç–æ–π –º–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —è–∑—ã–∫–∞–º–∏
 * –°–æ–≤–º–µ—Å—Ç–∏–º —Å–æ –≤—Å–µ–º–∏ –±—Ä–∞—É–∑–µ—Ä–∞–º–∏
 */

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
var currentLanguage = 'ru';
var languageManager = null;

// –°–ª–æ–≤–∞—Ä—å –ø–µ—Ä–µ–≤–æ–¥–æ–≤
var interfaceTranslations = {
    'ru': {
        'welcome': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å',
        'logout': 'üö™ –í—ã–π—Ç–∏',
        'character_generator': 'üé≠ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π',
        'generate': 'üé≤ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å',
        'race': '–†–∞—Å–∞',
        'class': '–ö–ª–∞—Å—Å',
        'level': '–£—Ä–æ–≤–µ–Ω—å',
        'gender': '–ü–æ–ª'
    },
    'en': {
        'welcome': 'Welcome',
        'logout': 'üö™ Logout',
        'character_generator': 'üé≠ Character Generator',
        'generate': 'üé≤ Generate',
        'race': 'Race',
        'class': 'Class',
        'level': 'Level',
        'gender': 'Gender'
    }
};

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞
function t(key) {
    if (interfaceTranslations[currentLanguage] && interfaceTranslations[currentLanguage][key]) {
        return interfaceTranslations[currentLanguage][key];
    }
    if (interfaceTranslations['ru'] && interfaceTranslations['ru'][key]) {
        return interfaceTranslations['ru'][key];
    }
    return key;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ —è–∑—ã–∫–∞
function updateLanguageSelector() {
    var selector = document.getElementById('languageSelector');
    if (selector) {
        selector.value = currentLanguage;
        console.log('–°–µ–ª–µ–∫—Ç–æ—Ä —è–∑—ã–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞:', currentLanguage);
    }
}

// –°–º–µ–Ω–∞ —è–∑—ã–∫–∞
function changeLanguage() {
    var selector = document.getElementById('languageSelector');
    if (selector) {
        currentLanguage = selector.value;
        console.log('–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞:', currentLanguage);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –≤ localStorage
        try {
            localStorage.setItem('dnd_language', currentLanguage);
            console.log('–Ø–∑—ã–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ localStorage');
        } catch (e) {
            console.log('localStorage –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        updateInterfaceLanguage();

        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –Ω–æ–≤—ã–º —è–∑—ã–∫–æ–º
        setTimeout(function() {
            console.log('–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É...');
            window.location.href = 'index.php?lang=' + currentLanguage;
        }, 100);
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
function updateInterfaceLanguage() {
    console.log('=== –ù–ê–ß–ò–ù–ê–ï–ú –û–ë–ù–û–í–õ–ï–ù–ò–ï –ò–ù–¢–ï–†–§–ï–ô–°–ê ===');
    console.log('–¢–µ–∫—É—â–∏–π —è–∑—ã–∫:', currentLanguage);

    var updatedCount = 0;

    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    var welcomeElement = document.querySelector('.welcome-text');
    if (welcomeElement) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è:', welcomeElement.textContent);
        var currentText = welcomeElement.textContent;
        var username = currentText.replace(/^(–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å|Welcome)\s+/, '');
        var newText = t('welcome') + ' ' + username;
        welcomeElement.textContent = newText;
        console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ:', newText);
        updatedCount++;
    } else {
        console.log('‚ùå –≠–ª–µ–º–µ–Ω—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤—ã—Ö–æ–¥–∞
    var logoutBtn = document.querySelector('.logout-btn');
    if (logoutBtn) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞:', logoutBtn.textContent);
        var newText = t('logout');
        logoutBtn.textContent = newText;
        console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞:', newText);
        updatedCount++;
    } else {
        console.log('‚ùå –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
    var characterHeader = document.querySelector('#character-modal .modal-header h2');
    if (characterHeader) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π:', characterHeader.textContent);
        var newText = t('character_generator');
        characterHeader.innerHTML = newText;
        console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞:', newText);
        updatedCount++;
    } else {
        console.log('‚ùå –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    var generateBtn = document.querySelector('.generate-btn');
    if (generateBtn) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:', generateBtn.textContent);
        var newText = t('generate') + ' ' + (currentLanguage === 'en' ? 'Character' : '–ø–µ—Ä—Å–æ–Ω–∞–∂–∞');
        generateBtn.textContent = newText;
        console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:', newText);
        updatedCount++;
    } else {
        console.log('‚ùå –ö–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –ª–µ–π–±–ª—ã —Ñ–æ—Ä–º
    var labels = document.querySelectorAll('label');
    console.log('–ù–∞–π–¥–µ–Ω–æ –ª–µ–π–±–ª–æ–≤:', labels.length);
    for (var i = 0; i < labels.length; i++) {
        var label = labels[i];
        var forAttr = label.getAttribute('for');
        if (forAttr === 'race') {
            var newText = t('race') + ':';
            label.textContent = newText;
            console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –ª–µ–π–±–ª —Ä–∞—Å—ã (' + i + '):', newText);
            updatedCount++;
        } else if (forAttr === 'class') {
            var newText = t('class') + ':';
            label.textContent = newText;
            console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –ª–µ–π–±–ª –∫–ª–∞—Å—Å–∞ (' + i + '):', newText);
            updatedCount++;
        } else if (forAttr === 'level') {
            var newText = t('level') + ':';
            label.textContent = newText;
            console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –ª–µ–π–±–ª —É—Ä–æ–≤–Ω—è (' + i + '):', newText);
            updatedCount++;
        } else if (forAttr === 'gender') {
            var newText = t('gender') + ':';
            label.textContent = newText;
            console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –ª–µ–π–±–ª –ø–æ–ª–∞ (' + i + '):', newText);
            updatedCount++;
        }
    }

    console.log('=== –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û. –û–±–Ω–æ–≤–ª–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ' + updatedCount + ' ===');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
function initLanguage() {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —è–∑—ã–∫–æ–≤–æ–≥–æ –º–æ–¥—É–ª—è...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —è–∑—ã–∫
    try {
        var savedLanguage = localStorage.getItem('dnd_language');
        if (savedLanguage) {
            currentLanguage = savedLanguage;
            console.log('–Ø–∑—ã–∫ –∏–∑ localStorage:', currentLanguage);
        }
    } catch (e) {
        console.log('localStorage –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —è–∑—ã–∫ –∏–∑ URL
    var urlParams = new URLSearchParams(window.location.search);
    var urlLang = urlParams.get('lang');
    if (urlLang) {
        currentLanguage = urlLang;
        console.log('–Ø–∑—ã–∫ –∏–∑ URL:', currentLanguage);
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä —è–∑—ã–∫–∞
    updateLanguageSelector();

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    updateInterfaceLanguage();

    console.log('–Ø–∑—ã–∫–æ–≤–æ–π –º–æ–¥—É–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initLanguage);
} else {
    initLanguage();
}