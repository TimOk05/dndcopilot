<?php
// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç AI API
require_once 'config.php';

echo "<h1>–¢–µ—Å—Ç AI API</h1>";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º OpenSSL
echo "<h2>1. –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenSSL</h2>";
if (extension_loaded('openssl')) {
    echo "‚úÖ OpenSSL –≤–∫–ª—é—á–µ–Ω<br>";
    echo "OpenSSL –≤–µ—Ä—Å–∏—è: " . OPENSSL_VERSION_TEXT . "<br>";
} else {
    echo "‚ùå OpenSSL –ù–ï –≤–∫–ª—é—á–µ–Ω<br>";
    echo "–≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –ø—Ä–æ–±–ª–µ–º —Å AI!<br>";
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º cURL
echo "<h2>2. –ü—Ä–æ–≤–µ—Ä–∫–∞ cURL</h2>";
if (function_exists('curl_init')) {
    echo "‚úÖ cURL –¥–æ—Å—Ç—É–ø–µ–Ω<br>";
    $curl_version = curl_version();
    echo "cURL –≤–µ—Ä—Å–∏—è: " . $curl_version['version'] . "<br>";
    echo "SSL –≤–µ—Ä—Å–∏—è: " . $curl_version['ssl_version'] . "<br>";
} else {
    echo "‚ùå cURL –ù–ï –¥–æ—Å—Ç—É–ø–µ–Ω<br>";
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á–∏
echo "<h2>3. –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–µ–π</h2>";
$deepseek_key = getApiKey('deepseek');
if ($deepseek_key) {
    echo "‚úÖ DeepSeek API –∫–ª—é—á: " . substr($deepseek_key, 0, 10) . "...<br>";
} else {
    echo "‚ùå DeepSeek API –∫–ª—é—á –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç<br>";
}

$openai_key = getApiKey('openai');
if ($openai_key) {
    echo "‚úÖ OpenAI API –∫–ª—é—á: " . substr($openai_key, 0, 10) . "...<br>";
} else {
    echo "‚ùå OpenAI API –∫–ª—é—á –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç<br>";
}

$google_key = getApiKey('google');
if ($google_key) {
    echo "‚úÖ Google API –∫–ª—é—á: " . substr($google_key, 0, 10) . "...<br>";
} else {
    echo "‚ùå Google API –∫–ª—é—á –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç<br>";
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º AI API
echo "<h2>4. –¢–µ—Å—Ç AI API</h2>";
if ($deepseek_key && function_exists('curl_init')) {
    echo "–¢–µ—Å—Ç–∏—Ä—É–µ–º DeepSeek API...<br>";
    
    $data = [
        'model' => 'deepseek-chat',
        'messages' => [
            ['role' => 'system', 'content' => '–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –º–∞—Å—Ç–µ—Ä–∞ D&D.'],
            ['role' => 'user', 'content' => '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?']
        ],
        'max_tokens' => 50,
        'temperature' => 0.7
    ];
    
    $ch = curl_init('https://api.deepseek.com/v1/chat/completions');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
    curl_setopt($ch, CURLOPT_HTTPHEADER, [
        'Content-Type: application/json',
        'Authorization: Bearer ' . $deepseek_key
    ]);
    curl_setopt($ch, CURLOPT_TIMEOUT, 10);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
    
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    $error = curl_error($ch);
    curl_close($ch);
    
    if ($response === false) {
        echo "‚ùå cURL –æ—à–∏–±–∫–∞: $error<br>";
    } elseif ($httpCode !== 200) {
        echo "‚ùå HTTP –æ—à–∏–±–∫–∞: $httpCode<br>";
        echo "–û—Ç–≤–µ—Ç: " . htmlspecialchars($response) . "<br>";
    } else {
        echo "‚úÖ AI API —Ä–∞–±–æ—Ç–∞–µ—Ç!<br>";
        $result = json_decode($response, true);
        if (isset($result['choices'][0]['message']['content'])) {
            echo "AI –æ—Ç–≤–µ—Ç: " . htmlspecialchars($result['choices'][0]['message']['content']) . "<br>";
        }
    }
} else {
    echo "‚ùå –ù–µ–ª—å–∑—è –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å AI API - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–ª—é—á –∏–ª–∏ cURL<br>";
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTPS —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
echo "<h2>5. –¢–µ—Å—Ç HTTPS —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π</h2>";
$test_urls = [
    'https://api.deepseek.com' => 'DeepSeek API',
    'https://www.dnd5eapi.co' => 'D&D 5e API',
    'https://www.google.com' => 'Google'
];

foreach ($test_urls as $url => $name) {
    echo "–¢–µ—Å—Ç–∏—Ä—É–µ–º $name ($url)...<br>";
    
    $context = stream_context_create([
        'http' => [
            'method' => 'HEAD',
            'timeout' => 5
        ],
        'ssl' => [
            'verify_peer' => false,
            'verify_peer_name' => false
        ]
    ]);
    
    $result = @file_get_contents($url, false, $context);
    if ($result !== false) {
        echo "‚úÖ $name –¥–æ—Å—Ç—É–ø–µ–Ω<br>";
    } else {
        echo "‚ùå $name –ù–ï –¥–æ—Å—Ç—É–ø–µ–Ω<br>";
        $error = error_get_last();
        if ($error) {
            echo "–û—à–∏–±–∫–∞: " . $error['message'] . "<br>";
        }
    }
}

echo "<h2>6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h2>";
if (!extension_loaded('openssl')) {
    echo "<strong>üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê:</strong><br>";
    echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª C:\\Windows\\php.ini<br>";
    echo "2. –ù–∞–π–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: ;extension=openssl<br>";
    echo "3. –£–±–µ—Ä–∏—Ç–µ —Ç–æ—á–∫—É —Å –∑–∞–ø—è—Ç–æ–π: extension=openssl<br>";
    echo "4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä<br>";
    echo "<br>";
}

if (!$deepseek_key) {
    echo "<strong>üü° –ü–†–û–ë–õ–ï–ú–ê:</strong><br>";
    echo "–î–æ–±–∞–≤—å—Ç–µ DeepSeek API –∫–ª—é—á –≤ config.php<br>";
    echo "<br>";
}

if (extension_loaded('openssl') && $deepseek_key) {
    echo "<strong>‚úÖ –í–°–ï –†–ê–ë–û–¢–ê–ï–¢!</strong><br>";
    echo "AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!<br>";
}
?>
