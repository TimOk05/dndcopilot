// ===== –ü–†–û–°–¢–û–ô –ú–û–ë–ò–õ–¨–ù–´–ô –ò–ù–¢–ï–†–§–ï–ô–° =====

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
const isTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
document.addEventListener('DOMContentLoaded', function() {
    if (isMobile || isTouch) {
        initSimpleMobile();
    }
});

function initSimpleMobile() {
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    document.body.classList.add('mobile-device');

    // –ü—Ä–æ—Å—Ç–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∞–π–∞—É—Ç–∞
    fixSimpleLayout();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–µ
    initSmoothScrolling();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ —Ñ–æ—Ä–º—ã
    initMobileForms();

    // –°–æ–∑–¥–∞–µ–º –±–æ–∫–æ–≤–æ–µ –º–µ–Ω—é
    createSideMenu();
}

// ===== –ü–†–û–°–¢–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –õ–ê–ô–ê–£–¢–ê =====

function fixSimpleLayout() {
    // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã - –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É
    const themeToggle = document.querySelector('.theme-toggle');
    if (themeToggle) {
        themeToggle.style.position = 'fixed';
        themeToggle.style.top = '20px';
        themeToggle.style.right = '20px';
        themeToggle.style.zIndex = '1000';
    }

    // –ê–¥–º–∏–Ω-—Å—Å—ã–ª–∫–∞ - —Ä—è–¥–æ–º —Å –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–º —Ç–µ–º—ã
    const adminLink = document.querySelector('.admin-link');
    if (adminLink) {
        adminLink.style.position = 'fixed';
        adminLink.style.top = '20px';
        adminLink.style.right = '80px';
        adminLink.style.zIndex = '1000';
    }

    // –£–±–∏—Ä–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ - —Å–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    const userInfo = document.querySelector('.user-info');
    if (userInfo) {
        userInfo.style.display = 'none';
    }

    // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç - –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É
    const parchment = document.querySelector('.parchment');
    if (parchment) {
        parchment.style.marginTop = '60px';
        parchment.style.paddingTop = '20px';
    }
}

// ===== –ë–û–ö–û–í–û–ï –ú–ï–ù–Æ =====

function createSideMenu() {
    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –º–µ–Ω—é
    const menuButton = document.createElement('div');
    menuButton.className = 'mobile-menu-button';
    menuButton.innerHTML = '‚ò∞';
    menuButton.onclick = toggleSideMenu;
    document.body.appendChild(menuButton);

    // –°–æ–∑–¥–∞–µ–º –±–æ–∫–æ–≤–æ–µ –º–µ–Ω—é
    const sideMenu = document.createElement('div');
    sideMenu.className = 'mobile-side-menu';
    sideMenu.innerHTML = `
        <div class="side-menu-header">
            <h3>–ú–µ–Ω—é</h3>
            <button class="close-menu" onclick="toggleSideMenu()">√ó</button>
        </div>
        <div class="side-menu-content">
            <a href="stats.php" class="menu-item">
                <span class="menu-icon">üìä</span>
                <span class="menu-text">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</span>
            </a>
            <a href="#" class="menu-item" onclick="toggleThemeMobile(); toggleSideMenu();">
                <span class="menu-icon" id="theme-menu-icon">üåô</span>
                <span class="menu-text">–°–º–µ–Ω–∏—Ç—å —Ç–µ–º—É</span>
            </a>
            <div class="menu-item logout-item" onclick="logout()">
                <span class="menu-icon">üö™</span>
                <span class="menu-text">–í—ã–π—Ç–∏</span>
            </div>
        </div>
    `;
    document.body.appendChild(sideMenu);

    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ
    const overlay = document.createElement('div');
    overlay.className = 'mobile-menu-overlay';
    overlay.onclick = toggleSideMenu;
    document.body.appendChild(overlay);

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∏–∫–æ–Ω–∫—É —Ç–µ–º—ã
    setTimeout(() => {
        const body = document.body;
        const currentTheme = body.getAttribute('data-theme') || 'light';
        const themeMenuIcon = document.getElementById('theme-menu-icon');
        if (themeMenuIcon) {
            themeMenuIcon.textContent = currentTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
        }
    }, 100);
}

function toggleSideMenu() {
    const sideMenu = document.querySelector('.mobile-side-menu');
    const overlay = document.querySelector('.mobile-menu-overlay');

    if (sideMenu.classList.contains('active')) {
        sideMenu.classList.remove('active');
        overlay.classList.remove('active');
    } else {
        sideMenu.classList.add('active');
        overlay.classList.add('active');
    }
}

// ===== –ü–õ–ê–í–ù–û–ï –ü–†–û–õ–ò–°–¢–´–í–ê–ù–ò–ï =====

function initSmoothScrolling() {
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–ª–∞–≤–Ω–æ–µ –ø—Ä–æ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫
    const links = document.querySelectorAll('a[href^="#"]');
    links.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });

    // –ü–ª–∞–≤–Ω–æ–µ –ø—Ä–æ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–µ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const navButtons = document.querySelectorAll('.fast-btn');
    navButtons.forEach(button => {
        button.addEventListener('click', function() {
            // –ü–ª–∞–≤–Ω–æ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –ø–æ—Å–ª–µ –¥–µ–π—Å—Ç–≤–∏—è
            setTimeout(() => {
                const resultElement = document.querySelector('.chat-box') ||
                    document.querySelector('.notes-block') ||
                    document.querySelector('.modal');
                if (resultElement) {
                    resultElement.scrollIntoView({
                        behavior: 'smooth',
                        block: 'nearest'
                    });
                }
            }, 500);
        });
    });
}

// ===== –ú–û–ë–ò–õ–¨–ù–´–ï –§–û–†–ú–´ =====

function initMobileForms() {
    // –£–ª—É—á—à–∞–µ–º –ø–æ–ª—è –≤–≤–æ–¥–∞
    const inputs = document.querySelectorAll('input[type="text"], input[type="number"], select');
    inputs.forEach(input => {
        input.style.fontSize = '16px'; // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –∑—É–º –Ω–∞ iOS
        input.style.padding = '12px';
        input.style.minHeight = '44px';
        input.style.borderRadius = '8px';
        input.style.border = '2px solid var(--border-primary)';
    });

    // –£–ª—É—á—à–∞–µ–º –∫–Ω–æ–ø–∫–∏
    const buttons = document.querySelectorAll('.fast-btn, button[type="submit"]');
    buttons.forEach(button => {
        button.style.minHeight = '44px';
        button.style.padding = '12px 20px';
        button.style.fontSize = '16px';
        button.style.borderRadius = '8px';
    });
}

// ===== –ü–†–û–°–¢–´–ï –ú–û–î–ê–õ–¨–ù–´–ï –û–ö–ù–ê =====

function openSimpleDiceModal() {
    const content = `
        <div style="text-align: center; padding: 20px;">
            <h3 style="margin-bottom: 20px;">üé≤ –ë—Ä–æ—Å–æ–∫ –∫–æ—Å—Ç–µ–π</h3>
            <div style="margin-bottom: 15px;">
                <input type="text" id="dice-input" value="1d20" 
                       style="width: 100px; text-align: center; font-size: 18px; padding: 10px;">
            </div>
            <div style="margin-bottom: 20px;">
                <input type="text" id="dice-label" placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π" 
                       style="width: 200px; padding: 10px;">
            </div>
            <button class="fast-btn" onclick="rollDice()" 
                    style="width: 100%; padding: 15px; font-size: 18px;">
                üé≤ –ë—Ä–æ—Å–∏—Ç—å
            </button>
        </div>
    `;
    showModal(content);
    setTimeout(() => document.getElementById('dice-input').focus(), 100);
}

function openSimpleNpcModal() {
    const content = `
        <div style="padding: 20px;">
            <h3 style="text-align: center; margin-bottom: 20px;">ü§ñ –°–æ–∑–¥–∞—Ç—å NPC</h3>
            
            <div style="margin-bottom: 15px;">
                <label style="display: block; margin-bottom: 5px; font-weight: bold;">–†–∞—Å–∞:</label>
                <select id="npc-race" style="width: 100%; padding: 12px; font-size: 16px;">
                    <option value="—á–µ–ª–æ–≤–µ–∫">–ß–µ–ª–æ–≤–µ–∫</option>
                    <option value="—ç–ª—å—Ñ">–≠–ª—å—Ñ</option>
                    <option value="–≥–Ω–æ–º">–ì–Ω–æ–º</option>
                    <option value="–ø–æ–ª—É–æ—Ä–∫">–ü–æ–ª—É–æ—Ä–∫</option>
                    <option value="–ø–æ–ª—É—Ä–æ—Å–ª–∏–∫">–ü–æ–ª—É—Ä–æ—Å–ª–∏–∫</option>
                    <option value="—Ç–∏—Ñ–ª–∏–Ω–≥">–¢–∏—Ñ–ª–∏–Ω–≥</option>
                    <option value="–¥—Ä–∞–∫–æ–Ω–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π">–î—Ä–∞–∫–æ–Ω–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π</option>
                    <option value="–ø–æ–ª—É—ç–ª—å—Ñ">–ü–æ–ª—É—ç–ª—å—Ñ</option>
                    <option value="–¥–≤–æ—Ä—Ñ">–î–≤–æ—Ä—Ñ</option>
                    <option value="–≥–æ–±–ª–∏–Ω">–ì–æ–±–ª–∏–Ω</option>
                    <option value="–æ—Ä–∫">–û—Ä–∫</option>
                    <option value="–∫–æ–±–æ–ª—å–¥">–ö–æ–±–æ–ª—å–¥</option>
                    <option value="—è—â–µ—Ä–æ–ª—é–¥">–Ø—â–µ—Ä–æ–ª—é–¥</option>
                    <option value="—Ö–æ–±–±–∏—Ç">–•–æ–±–±–∏—Ç</option>
                </select>
            </div>
            
            <div style="margin-bottom: 15px;">
                <label style="display: block; margin-bottom: 5px; font-weight: bold;">–ö–ª–∞—Å—Å:</label>
                <select id="npc-class" style="width: 100%; padding: 12px; font-size: 16px;">
                    <option value="–≤–æ–∏–Ω">–í–æ–∏–Ω</option>
                    <option value="–º–∞–≥">–ú–∞–≥</option>
                    <option value="–∂—Ä–µ—Ü">–ñ—Ä–µ—Ü</option>
                    <option value="–ø–ª—É—Ç">–ü–ª—É—Ç</option>
                    <option value="–ø–∞–ª–∞–¥–∏–Ω">–ü–∞–ª–∞–¥–∏–Ω</option>
                    <option value="—Å–ª–µ–¥–æ–ø—ã—Ç">–°–ª–µ–¥–æ–ø—ã—Ç</option>
                    <option value="–≤–∞—Ä–≤–∞—Ä">–í–∞—Ä–≤–∞—Ä</option>
                    <option value="–±–∞—Ä–¥">–ë–∞—Ä–¥</option>
                    <option value="–¥—Ä—É–∏–¥">–î—Ä—É–∏–¥</option>
                    <option value="–º–æ–Ω–∞—Ö">–ú–æ–Ω–∞—Ö</option>
                    <option value="–∫–æ–ª–¥—É–Ω">–ö–æ–ª–¥—É–Ω</option>
                    <option value="—á–∞—Ä–æ–¥–µ–π">–ß–∞—Ä–æ–¥–µ–π</option>
                    <option value="–∏–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å">–ò–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å</option>
                    <option value="–∫—Ä–æ–≤–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫">–ö—Ä–æ–≤–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫</option>
                    <option value="–º–∏—Å—Ç–∏–∫">–ú–∏—Å—Ç–∏–∫</option>
                    <option value="–ø—Å–∏—Ö–æ–Ω–∏–∫">–ü—Å–∏—Ö–æ–Ω–∏–∫</option>
                    <option value="–∞—Ä—Ç–∏—Ñ–∏—Å–µ—Ä">–ê—Ä—Ç–∏—Ñ–∏—Å–µ—Ä</option>
                </select>
            </div>
            
            <div style="margin-bottom: 20px;">
                <label style="display: block; margin-bottom: 5px; font-weight: bold;">–£—Ä–æ–≤–µ–Ω—å:</label>
                <input type="number" id="npc-level" value="1" min="1" max="20" 
                       style="width: 100%; padding: 12px; font-size: 16px;">
            </div>
            
            <div style="margin-bottom: 15px;">
                <button class="fast-btn" onclick="toggleMobileAdvancedSettings()" 
                        style="width: 100%; padding: 12px; font-size: 16px; background: var(--accent-info);">
                    ‚öôÔ∏è –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                </button>
            </div>
            
            <div id="mobile-advanced-settings" style="display: none; margin-bottom: 15px; padding: 15px; background: var(--bg-tertiary); border-radius: 8px; border: 1px solid var(--border-tertiary);">
                <div style="margin-bottom: 15px;">
                    <label style="display: block; margin-bottom: 5px; font-weight: bold;">–ü–æ–ª:</label>
                    <div style="display: flex; gap: 10px; flex-wrap: wrap;">
                        <label><input type="radio" name="gender" value="–º—É–∂—Å–∫–æ–π" checked> –ú—É–∂—Å–∫–æ–π</label>
                        <label><input type="radio" name="gender" value="–∂–µ–Ω—Å–∫–∏–π"> –ñ–µ–Ω—Å–∫–∏–π</label>
                        <label><input type="radio" name="gender" value="—Ä–∞–Ω–¥–æ–º"> –†–∞–Ω–¥–æ–º</label>
                    </div>
                </div>
                <div>
                    <label style="display: block; margin-bottom: 5px; font-weight: bold;">–ú–∏—Ä–æ–≤–æ–∑–∑—Ä–µ–Ω–∏–µ:</label>
                    <div style="display: flex; gap: 10px; flex-wrap: wrap;">
                        <label><input type="radio" name="alignment" value="–¥–æ–±—Ä—ã–π" checked> –î–æ–±—Ä—ã–π</label>
                        <label><input type="radio" name="alignment" value="–Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π"> –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π</label>
                        <label><input type="radio" name="alignment" value="–∑–ª–æ–π"> –ó–ª–æ–π</label>
                        <label><input type="radio" name="alignment" value="—Ä–∞–Ω–¥–æ–º"> –†–∞–Ω–¥–æ–º</label>
                    </div>
                </div>
            </div>
            
            <button class="fast-btn" onclick="generateSimpleNpc()" 
                    style="width: 100%; padding: 15px; font-size: 18px;">
                ü§ñ –°–æ–∑–¥–∞—Ç—å NPC
            </button>
        </div>
    `;
    showModal(content);
}

function openSimpleInitiativeModal() {
    const content = `
        <div style="text-align: center; padding: 20px;">
            <h3 style="margin-bottom: 20px;">‚öîÔ∏è –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É</h3>
            <div style="margin-bottom: 15px;">
                <input type="text" id="initiative-name" placeholder="–ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞" 
                       style="width: 200px; padding: 10px; font-size: 16px;">
            </div>
            <div style="margin-bottom: 20px;">
                <input type="number" id="initiative-value" placeholder="–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞" 
                       style="width: 100px; padding: 10px; font-size: 16px;">
            </div>
            <button class="fast-btn" onclick="addInitiative()" 
                    style="width: 100%; padding: 15px; font-size: 18px;">
                ‚öîÔ∏è –î–æ–±–∞–≤–∏—Ç—å
            </button>
        </div>
    `;
    showModal(content);
    setTimeout(() => document.getElementById('initiative-name').focus(), 100);
}

// ===== –ü–†–û–°–¢–´–ï –§–£–ù–ö–¶–ò–ò =====

function generateSimpleNpc() {
    const race = document.getElementById('npc-race').value;
    const npcClass = document.getElementById('npc-class').value;
    const level = document.getElementById('npc-level').value;

    if (!race || !npcClass || !level) {
        alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
        return;
    }

    // –°–æ–±–∏—Ä–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    let advancedSettings = {};

    // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª
    const genderRadio = document.querySelector('input[name="gender"]:checked');
    if (genderRadio && genderRadio.value !== '—Ä–∞–Ω–¥–æ–º') {
        advancedSettings.gender = genderRadio.value;
    }

    // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –º–∏—Ä–æ–≤–æ–∑–∑—Ä–µ–Ω–∏–µ
    const alignmentRadio = document.querySelector('input[name="alignment"]:checked');
    if (alignmentRadio && alignmentRadio.value !== '—Ä–∞–Ω–¥–æ–º') {
        advancedSettings.alignment = alignmentRadio.value;
    }

    closeModal();
    setTimeout(() => {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
        window.npcRace = race;
        window.npcClass = npcClass;
        window.npcLevel = parseInt(level);

        // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        console.log('Mobile NPC Generation:', { race, npcClass, level, advancedSettings });

        // –í—ã–∑—ã–≤–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –Ω–∞–ø—Ä—è–º—É—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        fetchNpcFromAI(race, npcClass, '', parseInt(level), advancedSettings);
    }, 300);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã –≤ –º–æ–±–∏–ª—å–Ω–æ–º –º–µ–Ω—é
function toggleThemeMobile() {
    const themeToggle = document.getElementById('theme-toggle');
    if (themeToggle) {
        themeToggle.click();
    } else {
        // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
        const body = document.body;
        const currentTheme = body.getAttribute('data-theme');
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';

        body.setAttribute('data-theme', newTheme);
        localStorage.setItem('theme', newTheme);

        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –≤ –º–µ–Ω—é
        const themeMenuIcon = document.getElementById('theme-menu-icon');
        if (themeMenuIcon) {
            themeMenuIcon.textContent = newTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
        }
    }
}

// ===== –ü–†–û–°–¢–´–ï CSS –°–¢–ò–õ–ò =====

const simpleMobileStyles = `
<style>
/* –ü—Ä–æ—Å—Ç—ã–µ –º–æ–±–∏–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∏–∑–∞–π–Ω –ü–ö –≤–µ—Ä—Å–∏–∏ */
.mobile-device .parchment {
    margin: 60px 10px 20px 10px;
    padding: 15px;
}

/* –ö–Ω–æ–ø–∫–∞ –±–æ–∫–æ–≤–æ–≥–æ –º–µ–Ω—é */
.mobile-menu-button {
    position: fixed;
    top: 20px;
    left: 20px;
    width: 40px;
    height: 40px;
    background: var(--accent-primary);
    color: var(--bg-secondary);
    border: 2px solid var(--accent-secondary);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 20px;
    cursor: pointer;
    z-index: 1000;
    box-shadow: 0 2px 8px var(--shadow-primary);
    transition: all 0.3s ease;
}

.mobile-menu-button:hover {
    background: var(--accent-secondary);
    transform: scale(1.1);
    box-shadow: 0 4px 12px var(--shadow-secondary);
}

/* –ë–æ–∫–æ–≤–æ–µ –º–µ–Ω—é */
.mobile-side-menu {
    position: fixed;
    top: 0;
    left: -280px;
    width: 280px;
    height: 100vh;
    background: var(--bg-secondary);
    border-right: 2px solid var(--border-primary);
    z-index: 1001;
    transition: left 0.3s ease;
    box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
}

.mobile-side-menu.active {
    left: 0;
}

.side-menu-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px;
    border-bottom: 1px solid var(--border-primary);
    background: var(--bg-tertiary);
}

.side-menu-header h3 {
    margin: 0;
    color: var(--text-primary);
    font-size: 18px;
}

.close-menu {
    background: none;
    border: none;
    font-size: 24px;
    color: var(--text-primary);
    cursor: pointer;
    padding: 0;
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.close-menu:hover {
    color: var(--accent-primary);
}

.side-menu-content {
    padding: 20px;
}

.menu-item {
    display: flex;
    align-items: center;
    padding: 15px;
    margin: 5px 0;
    background: var(--bg-tertiary);
    border: 1px solid var(--border-primary);
    border-radius: 8px;
    text-decoration: none;
    color: var(--text-primary);
    font-size: 16px;
    transition: all 0.3s ease;
}

.menu-item:hover {
    background: var(--bg-quaternary);
    transform: translateX(5px);
    text-decoration: none;
    color: var(--text-primary);
}

.menu-icon {
    margin-right: 15px;
    font-size: 20px;
    width: 24px;
    text-align: center;
}

.menu-text {
    flex: 1;
}

.logout-item {
    background: var(--accent-danger);
    color: white;
    border-color: var(--accent-danger);
}

.logout-item:hover {
    background: var(--bg-secondary);
    color: var(--accent-danger);
}

/* –ó–∞—Ç–µ–º–Ω–µ–Ω–∏–µ */
.mobile-menu-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.5);
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
}

.mobile-menu-overlay.active {
    opacity: 1;
    visibility: visible;
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–µ –ø–æ–ª—è –≤–≤–æ–¥–∞ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∏–ª–∏ –ü–ö */
.mobile-device input[type="text"],
.mobile-device input[type="number"],
.mobile-device select {
    width: 100%;
    padding: 12px;
    font-size: 16px;
    border: 2px solid var(--border-primary);
    border-radius: 8px;
    background: var(--bg-tertiary);
    color: var(--text-primary);
    margin: 5px 0;
}

.mobile-device input:focus,
.mobile-device select:focus {
    outline: none;
    border-color: var(--accent-primary);
    box-shadow: 0 0 5px rgba(0, 124, 186, 0.3);
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–π —á–∞—Ç - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∏–ª–∏ –ü–ö */
.mobile-device .chat-box {
    max-height: 60vh;
    overflow-y: auto;
    padding: 15px;
    background: var(--bg-tertiary);
    border-radius: 10px;
    border: 1px solid var(--border-primary);
    margin: 10px 0;
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∏–ª–∏ –ü–ö */
.mobile-device .notes-block {
    margin-top: 20px;
    padding: 15px;
    background: var(--bg-tertiary);
    border-radius: 10px;
    border: 1px solid var(--border-primary);
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∏–ª–∏ –ü–ö */
.mobile-device .modal {
    width: 95vw;
    max-width: 400px;
    height: auto;
    max-height: 90vh;
    margin: 5vh auto;
    border-radius: 15px;
    overflow-y: auto;
    background: var(--bg-secondary);
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3);
}

.mobile-device .modal-content {
    padding: 20px;
}

/* –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞ —á–∞—Ç–∞ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∏–ª–∏ –ü–ö */
.mobile-device form {
    display: flex;
    gap: 10px;
    margin: 15px 0;
    align-items: center;
}

.mobile-device form input[type="text"] {
    flex: 1;
    margin: 0;
}

.mobile-device form button {
    padding: 12px 20px;
    font-size: 16px;
    border-radius: 8px;
    border: none;
    background: var(--accent-primary);
    color: var(--bg-secondary);
    white-space: nowrap;
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∏–ª–∏ –ü–ö */
.mobile-device .reset-link {
    color: var(--accent-primary);
    text-decoration: none;
    font-size: 14px;
    margin-left: 10px;
}

.mobile-device .reset-link:hover {
    text-decoration: underline;
}

/* –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ */
.mobile-device * {
    scroll-behavior: smooth;
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∏–ª–∏ –ü–ö */
.mobile-device h1 {
    text-align: center;
    margin: 20px 0;
    color: var(--text-primary);
    font-size: 24px;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
}

/* –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Å–µ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∏–ª–∏ –ü–ö */
.mobile-device .fast-bar {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 10px;
    margin: 15px 0;
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∏–ª–∏ –ü–ö */
.mobile-device .hotkeys-hint {
    text-align: center;
    margin: 10px 0;
    font-size: 12px;
    color: var(--text-tertiary);
    opacity: 0.8;
}

/* –ê–Ω–∏–º–∞—Ü–∏–∏ */
@keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
}

.mobile-device .parchment {
    animation: fadeIn 0.5s ease-out;
}

/* –£–ª—É—á—à–µ–Ω–Ω–∞—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å */
.mobile-device button:focus,
.mobile-device input:focus,
.mobile-device select:focus {
    outline: 2px solid var(--accent-primary);
    outline-offset: 2px;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–µ–º—ã—Ö –±–ª–æ–∫–æ–≤ –≤ –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ */
.mobile-device .npc-collapsible-header {
    cursor: pointer;
    user-select: none;
    display: flex;
    align-items: center;
    justify-content: space-between;
    transition: all 0.3s ease;
    padding: 8px 0;
}

.mobile-device .npc-collapsible-header:hover {
    opacity: 0.8;
}

.mobile-device .npc-collapsible-header .toggle-icon {
    font-size: 0.8em;
    transition: transform 0.3s ease;
    margin-left: 8px;
}

.mobile-device .npc-collapsible-header.collapsed .toggle-icon {
    transform: rotate(-90deg);
}

.mobile-device .npc-collapsible-content {
    max-height: 1000px;
    overflow: hidden;
    transition: max-height 0.3s ease, opacity 0.3s ease;
    opacity: 1;
}

.mobile-device .npc-collapsible-content.collapsed {
    max-height: 0;
    opacity: 0;
}
</style>
`;

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤ head
document.head.insertAdjacentHTML('beforeend', simpleMobileStyles);

// --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–µ–º—ã—Ö —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (–º–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è) ---
function toggleTechnicalParams(headerElement) {
    const contentElement = headerElement.nextElementSibling;
    const isCollapsed = headerElement.classList.contains('collapsed');

    if (isCollapsed) {
        // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º
        headerElement.classList.remove('collapsed');
        contentElement.classList.remove('collapsed');
    } else {
        // –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º
        headerElement.classList.add('collapsed');
        contentElement.classList.add('collapsed');
    }
}

// --- –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ ---
function toggleMobileAdvancedSettings() {
    const panel = document.getElementById('mobile-advanced-settings');
    const button = document.querySelector('button[onclick="toggleMobileAdvancedSettings()"]');

    if (panel.style.display === 'none') {
        panel.style.display = 'block';
        button.innerHTML = '‚öôÔ∏è –°–∫—Ä—ã—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏';
        button.style.background = 'var(--accent-warning)';
    } else {
        panel.style.display = 'none';
        button.innerHTML = '‚öôÔ∏è –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏';
        button.style.background = 'var(--accent-info)';
    }
}