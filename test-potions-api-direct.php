<?php
/**
 * –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç API –∑–µ–ª–∏–π
 */

echo "<h1>üß™ –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç API –∑–µ–ª–∏–π</h1>";
echo "<p><strong>–í—Ä–µ–º—è:</strong> " . date('Y-m-d H:i:s') . "</p>";

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π –≤—ã–∑–æ–≤ API
$url = __DIR__ . '/api/generate-potions.php?action=random&count=1';

echo "<h2>üåê –¢–µ—Å—Ç API –≤—ã–∑–æ–≤–∞</h2>";
echo "<p><strong>URL:</strong> <code>$url</code></p>";

// –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
$context = stream_context_create([
    'http' => [
        'method' => 'GET',
        'header' => [
            'User-Agent: DnD-Copilot/1.0',
            'Accept: application/json'
        ],
        'timeout' => 30
    ]
]);

try {
    echo "<p>–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å...</p>";
    
    $response = file_get_contents($url, false, $context);
    
    if ($response === false) {
        echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞</p>";
    } else {
        echo "<p style='color: green;'>‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω</p>";
        echo "<p><strong>–†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:</strong> " . strlen($response) . " –±–∞–π—Ç</p>";
        
        // –ü—ã—Ç–∞–µ–º—Å—è –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å JSON
        $data = json_decode($response, true);
        if (json_last_error() === JSON_ERROR_NONE) {
            echo "<p style='color: green;'>‚úÖ JSON —É—Å–ø–µ—à–Ω–æ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω</p>";
            
            if ($data['success']) {
                echo "<p style='color: green;'>‚úÖ API –≤–µ—Ä–Ω—É–ª —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç</p>";
                echo "<p><strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–µ–ª–∏–π:</strong> " . $data['count'] . "</p>";
                
                if (isset($data['data'][0])) {
                    $potion = $data['data'][0];
                    echo "<h3>üß™ –ü–µ—Ä–≤–æ–µ –∑–µ–ª—å–µ:</h3>";
                    echo "<ul>";
                    echo "<li><strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> " . htmlspecialchars($potion['name']) . "</li>";
                    echo "<li><strong>–†–µ–¥–∫–æ—Å—Ç—å:</strong> " . htmlspecialchars($potion['rarity']) . "</li>";
                    echo "<li><strong>–¢–∏–ø:</strong> " . htmlspecialchars($potion['type']) . "</li>";
                    echo "<li><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> " . htmlspecialchars($potion['description']) . "</li>";
                    echo "</ul>";
                }
            } else {
                echo "<p style='color: red;'>‚ùå API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: " . htmlspecialchars($data['error']) . "</p>";
            }
        } else {
            echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON: " . json_last_error_msg() . "</p>";
            echo "<p><strong>–°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç:</strong></p>";
            echo "<pre>" . htmlspecialchars(substr($response, 0, 500)) . "...</pre>";
        }
    }
    
} catch (Exception $e) {
    echo "<p style='color: red;'>‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: " . htmlspecialchars($e->getMessage()) . "</p>";
}

echo "<p><strong>–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω:</strong> " . date('Y-m-d H:i:s') . "</p>";
?>
